version: '3.8'

services:
  mock-register:
    container_name: mock-register
    image: consumerdataright/mock-register
    ports: 
      - "7000:7000"
      - "7001:7001"
      - "7006:7006"
    extra_hosts:
      - "mock-data-holder:host-gateway"
      - "mock-data-recipient:host-gateway"           
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    healthcheck:
      test: wget --no-check-certificate --no-verbose --spider https://localhost:7006/health || exit 1
      timeout: 5s
      interval: 5s
      retries: 50      
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - app-network    

  mock-data-recipient:
    container_name: mock-data-recipient

    # image: consumerdataright/mock-data-recipient
    # image: mock-data-recipient:dsb-0.2
    # image: consumerdataright/authorisation-server
    build:
      context: . 
      dockerfile: dockerfile.mock-data-recipient
    ports: 
      - "9001:9001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    extra_hosts:
      - "mock-data-holder:host-gateway"
      - "mock-register:host-gateway"      
    healthcheck:
      test: wget --no-check-certificate --no-verbose --spider https://localhost:9001/health || exit 1            
      timeout: 5s
      interval: 5s
      retries: 50      
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - app-network        

  cdr-auth-server:
    container_name: cdr-auth-server
    #image: cdr-auth-server:accc-dsb
    #image: consumerdataright/authorisation-server
    build:
      context: . 
      dockerfile: dockerfile.cdr-auth-server 
    ports: 
      - "8001:8001"
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    extra_hosts:
      - "mssql:host-gateway"
      - "mock-data-holder:host-gateway"
      - "mock-register:host-gateway"  
      - "mock-data-recipient:host-gateway"      
    depends_on:
      mssql:
        condition: service_healthy      
    networks:
      - app-network       

  authserver-ui:
    container_name: authserver-ui
    image: authserver-ui:dsb-0.1
    ports: 
      - "3000:3000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    extra_hosts:
      - "mssql:host-gateway"
      - "mock-data-holder:host-gateway"
      - "mock-register:host-gateway"  
      - "mock-data-recipient:host-gateway"    
      - "cdr-auth-server:host-gateway"          
    networks:
      - app-network       


  tls-gateway:
    container_name: tls-gateway
    # image: tls-gateway:dsb-0.1
    build:
      context: . 
      dockerfile: dockerfile.tlsgateway  
    extra_hosts:
      - "mock-data-recipient:host-gateway"
      - "mock-register:host-gateway"  
      - "mock-data-holder:host-gateway" 
      - "cdr-auth-server:host-gateway"     
    ports: 
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    networks:
      - app-network       

  mtls-gateway:
    container_name: mtls-gateway
    # image: mtls-gateway:dsb-0.1
    build:
      context: . 
      dockerfile: dockerfile.mtlsgateway    
    ports: 
      - "8082:8082"
    extra_hosts:
      - "mock-data-recipient:host-gateway"
      - "mock-register:host-gateway"  
      - "mock-data-holder:host-gateway" 
      - "cdr-auth-server:host-gateway"        
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    networks:
      - app-network     

  mock-data-holder:
    container_name: mock-data-holder
    # image: dsb-test-data-server:dsb-0.1
    build:
      context: . 
      dockerfile: dockerfile.dsb-test-data-server    
    restart: unless-stopped
    env_file: .env.docker
    extra_hosts:
      - "mock-data-recipient:host-gateway"
      - "mock-register:host-gateway"  
      - "mock-data-holder:host-gateway" 
      - "cdr-auth-server:host-gateway" 
      - "mongodb:host-gateway"    
    depends_on:
      - mongodb
      # - cdr-auth-server
    ports:
      - "3005:3005"
    networks:
      - app-network

  mssql:
    container_name: mssql
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    ports:
      - '1433:1433'
    environment:
      - ACCEPT_EULA=Yes
      - SA_PASSWORD=Pa{}w0rd2019
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S . -U sa -P "Pa{}w0rd2019" -Q "SELECT 1" || exit 1 
      timeout: 10s
      interval: 10s
      retries: 10 
    networks:
      - app-network     

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    env_file: .env.docker
    volumes:     
      - dbdata:/usr/local/var/mongodb
    ports:
      - "27017:27017"
    networks:
      - app-network  

  dsb-data-loader:
    build:
      context: .
      dockerfile: dockerfile.dsb-data-loader
    image: cdradmin/dsb-data-loader:1.24.0
    container_name: dsb-data-loader
    env_file: .env.docker
    depends_on:
      - mongodb
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:    